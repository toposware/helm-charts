name: Build and check 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # Change to specific Rust release to pin
  rust_clippy: 1.62.1

jobs:
  build_and_test:

    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
        version:
          - stable
          - nightly-2022-07-20

    name: ${{ matrix.version }} - Build and Test
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.version }}
            components: 
            override: true

      - uses: Swatinem/rust-cache@v1

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - uses: Swatinem/rust-cache@v1

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust ${{ env.rust_clippy }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_clippy }}
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v1

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all
