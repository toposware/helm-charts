apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-spammer
  labels:
    app: cert-spammer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cert-spammer
  template:
    metadata:
      labels:
        app: cert-spammer
    spec:
      containers:
        - name: spam
          image: ghcr.io/topos-network/topos:main-network
          args: ["network", "spam", "--target-nodes-path", "/tmp/shared/peer_nodes.json"]
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /tmp/shared
              name: shared
          startupProbe:
            exec:
              command:
                - /bin/cat
                - /tmp/shared/peer_ids.json
            initialDelaySeconds: 10
          env:
            - name: RUST_LOG
              value: info
            - name: CERT_PER_BATCH
              value: "{{ $.Values.env.CERT_PER_BATCH }}"
            - name: BATCH_TIME_INTERVAL
              value: "{{ $.Values.env.BATCH_TIME_INTERVAL }}"
            - name: TARGET_NODES_PATH
              value: /tmp/shared/peer_nodes.json
            - name: OTLP_BATCH_SCHEDULED_DELAY
              value: "${{ $.Values.env.OTLP_BATCH_SCHEDULED_DELAY }}"
            - name: OTLP_BATCH_MAX_CONCURRENT_EXPORTS
              value: "${{ $.Values.env.OTLP_BATCH_MAX_CONCURRENT_EXPORTS }}"
            - name: OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE
              value: "${{ $.Values.env.OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE }}"
            - name: OTLP_BATCH_EXPORT_TIMEOUT
              value: "${{ $.Values.env.OTLP_BATCH_EXPORT_TIMEOUT }}"
            - name: OTLP_BATCH_MAX_QUEUE_SIZE
              value: "${{ $.Values.env.OTLP_BATCH_MAX_QUEUE_SIZE }}"
      volumes:
      - name: shared
        persistentVolumeClaim:
          claimName: shared
