{{- range $index, $e := until (int $.Values.replicas) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.mode }}-{{ $index }}
  labels:
    app: {{ $.Values.mode }}-{{ $index }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $.Values.mode }}-{{ $index }}
  template:
    metadata:
      labels:
        app: {{ $.Values.mode }}-{{ $index }}
        node: {{ $.Values.mode }}
    spec:
      hostname: {{ $.Values.mode }}-{{ $index }}
      {{ if $.Values.singleTCENodePerK8sNode }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: node
                    operator: In
                    values:
                      - {{ $.Values.mode }}
              topologyKey: "kubernetes.io/hostname"
      {{ end }}
      containers:
        - name: {{ $.Values.mode }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: Always
          startupProbe:
            {{ if eq $.Values.mode "boot" }}
            exec:
              command:
                - /bin/bash
                - -c
                - topos tce push-peer-list --node http://localhost:1340 --format json /tmp/shared/peer_ids.json;
            {{ else }}
            exec:
              command:
                - /bin/bash
                - -c
                - PEER=$(topos tce keys --from-seed=$HOSTNAME); NODE="http://$HOSTNAME:1340"; { topos tce push-peer-list --node http://localhost:1340 --format json /tmp/shared/peer_ids.json && topos tce status --node http://localhost:1340; } && { ( flock --exclusive -w 10 201 || exit 1; cat <<< $(jq --arg PEER $PEER '. |= (. + [$PEER] | unique )' /tmp/shared/peer_ids.json) > /tmp/shared/peer_ids.json;) 201>"/tmp/shared/peer_ids.json.lock"; ( flock --exclusive -w 10 200 || exit 1; cat <<< $(jq --arg NODE $NODE '.nodes |= (. + [$NODE] | unique)' /tmp/shared/peer_nodes.json) > /tmp/shared/peer_nodes.json;) 200>"/tmp/shared/peer_nodes.json.lock"; exit 0; } || { ( flock --exclusive -w 10 201 || exit 1; cat <<< $(jq --arg PEER $PEER '. |= (. - [$PEER])' /tmp/shared/peer_ids.json) > /tmp/shared/peer_ids.json;) 201>"/tmp/shared/peer_ids.json.lock"; ( flock --exclusive -w 10 200 || exit 1; cat <<< $(jq --arg NODE $NODE '.nodes |= (. - [$NODE])' /tmp/shared/peer_nodes.json) > /tmp/shared/peer_nodes.json;) 200>"/tmp/shared/peer_nodes.json.lock"; exit 1; };
            {{ end }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 30
            successThreshold: 1
          args: ["{{ $.Values.mode }}", "tce", "run"]
          ports:
            - name: p2p
              containerPort: {{ $.Values.ports.p2p }}
              protocol: TCP
            - name: http
              containerPort: {{ $.Values.ports.http }}
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/shared
              name: shared
          env:
            - name: TCE_LOCAL_KS
              value: "{{ $.Values.env.TCE_LOCAL_KS }}"
            - name: LOCAL_TEST_NET
              value: "{{ $.Values.env.LOCAL_TEST_NET }}"
            - name: TOOLCHAIN_VERSION
              value: "{{ $.Values.env.TOOLCHAIN_VERSION }}"
            - name: RUST_LOG
              value: "{{ $.Values.env.RUST_LOG }}"
            - name: RUST_BACKTRACE
              value: "{{ $.Values.env.RUST_BACKTRACE }}"
            - name: TCE_DB_PATH
              value: "{{ $.Values.env.TCE_DB_PATH }}"
            - name: TCE_API_ADDR
              value: "{{ $.Values.env.TCE_API_ADDR }}"
            - name: TOPOS_OTLP_SERVICE_NAME
              value: "{{ $.Values.env.TOPOS_OTLP_SERVICE_NAME }}"
            - name: TOPOS_OTLP_AGENT
              value: "{{ $.Values.env.TOPOS_OTLP_AGENT }}"
            - name: TCE_ECHO_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_ECHO_SAMPLE_SIZE }}"
            - name: TCE_READY_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_READY_SAMPLE_SIZE }}"
            - name: TCE_DELIVERY_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_DELIVERY_SAMPLE_SIZE }}"
            - name: TCE_ECHO_THRESHOLD
              value: "{{ $.Values.env.TCE_ECHO_THRESHOLD }}"
            - name: TCE_READY_THRESHOLD
              value: "{{ $.Values.env.TCE_READY_THRESHOLD }}"
            - name: TCE_DELIVERY_THRESHOLD
              value: "{{ $.Values.env.TCE_DELIVERY_THRESHOLD }}"
            - name: TOPOS_OTLP_TAGS
              value: "{{ $.Values.env.TOPOS_OTLP_TAGS }}"
            - name: OTLP_BATCH_SCHEDULED_DELAY
              value: "{{ $.Values.env.OTLP_BATCH_SCHEDULED_DELAY }}"
            - name: OTLP_BATCH_MAX_CONCURRENT_EXPORTS
              value: "{{ $.Values.env.OTLP_BATCH_MAX_CONCURRENT_EXPORTS }}"
            - name: OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE
              value: "{{ $.Values.env.OTLP_BATCH_MAX_EXPORTER_BATCH_SIZE }}"
            - name: OTLP_BATCH_EXPORT_TIMEOUT
              value: "{{ $.Values.env.OTLP_BATCH_EXPORT_TIMEOUT }}"
            - name: OTLP_BATCH_MAX_QUEUE_SIZE
              value: "{{ $.Values.env.OTLP_BATCH_MAX_QUEUE_SIZE }}"
            - name: OTEL_EXPORTER_OTLP_COMPRESSION
              value: "{{ $.Values.env.OTEL_EXPORTER_OTLP_COMPRESSION }}"
            - name: OTEL_EXPORTER_OTLP_TIMEOUT
              value: "{{ $.Values.env.OTEL_EXPORTER_OTLP_TIMEOUT }}"
      volumes:
      - name: shared
        persistentVolumeClaim:
          claimName: shared
---
{{- end }}
