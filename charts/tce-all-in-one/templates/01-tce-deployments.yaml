apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.mode }}-pull-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
---
{{- range $index, $e := until (int $.Values.replicas) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.mode }}-{{ $index }}
  labels:
    app: {{ $.Values.mode }}-{{ $index }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $.Values.mode }}-{{ $index }}
  template:
    metadata:
      labels:
        app: {{ $.Values.mode }}-{{ $index }}
        node: {{ $.Values.mode }}
    spec:
      hostname: {{ $.Values.mode }}-{{ $index }}
      imagePullSecrets:
        - name: {{ $.Values.mode }}-pull-secret
      {{ if eq $.Values.mode "boot" }}
      initContainers:
        - name: init-myservice
          image: busybox:1.28
          command: ["sh", "-c", "rm /tmp/shared/peer_nodes.json /tmp/shared/peer_ids.json /tmp/shared/boot_peers.json || exit 0"]
          volumeMounts:
            - mountPath: /tmp/shared
              name: shared
      {{ end }}
      containers:
        - name: {{ $.Values.mode }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          args: {{ $.Values.args }}
          imagePullPolicy: Always
          {{ if eq $.Values.mode "boot" }}
          readinessProbe:
            exec:
              command: ["cat", "/tmp/shared/peer_nodes.json"]
          args: ["boot", "tce", "run"]
          {{ else }}
          startupProbe:
            exec:
              command: ["cat", "/tmp/shared/peer_nodes.json"]
          args: ["tce", "run"]
          {{ end }}
          ports:
            - name: p2p
              containerPort: {{ $.Values.ports.p2p }}
              protocol: TCP
            - name: http
              containerPort: {{ $.Values.ports.http }}
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/shared
              name: shared
          env:
            - name: TCE_LOCAL_KS
              value: "{{ $.Values.env.TCE_LOCAL_KS }}"
            - name: LOCAL_TEST_NET
              value: "{{ $.Values.env.LOCAL_TEST_NET }}"
            - name: TOOLCHAIN_VERSION
              value: "{{ $.Values.env.TOOLCHAIN_VERSION }}"
            - name: RUST_LOG
              value: "{{ $.Values.env.RUST_LOG }}"
            - name: RUST_BACKTRACE
              value: "{{ $.Values.env.RUST_BACKTRACE }}"
            - name: TCE_DB_PATH
              value: "{{ $.Values.env.TCE_DB_PATH }}"
            - name: TCE_API_ADDR
              value: "{{ $.Values.env.TCE_API_ADDR }}"
            - name: TCE_JAEGER_SERVICE_NAME
              value: "{{ $.Values.env.TCE_JAEGER_SERVICE_NAME }}"
            - name: TCE_JAEGER_AGENT
              value: "{{ $.Values.env.TCE_JAEGER_AGENT }}"
            - name: TCE_ECHO_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_ECHO_SAMPLE_SIZE }}"
            - name: TCE_READY_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_READY_SAMPLE_SIZE }}"
            - name: TCE_DELIVERY_SAMPLE_SIZE
              value: "{{ $.Values.env.TCE_DELIVERY_SAMPLE_SIZE }}"
            - name: TCE_ECHO_THRESHOLD
              value: "{{ $.Values.env.TCE_ECHO_THRESHOLD }}"
            - name: TCE_READY_THRESHOLD
              value: "{{ $.Values.env.TCE_READY_THRESHOLD }}"
            - name: TCE_DELIVERY_THRESHOLD
              value: "{{ $.Values.env.TCE_DELIVERY_THRESHOLD }}"
      volumes:
      - name: shared
        persistentVolumeClaim:
          claimName: shared
---
{{- end }}
