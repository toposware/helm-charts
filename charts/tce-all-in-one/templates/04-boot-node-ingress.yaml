{{ if .Values.ingress }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: boot
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.acme.environment }}"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  tls:
  - hosts:
    - {{ .Values.bootHost }}
    secretName: "{{ .Values.bootHost }}-secret-tls"
  rules:
    - host: {{ .Values.bootHost }}
      http:
        paths:
          - backend:
              service:
                name: peers
                port:
                  number: 1340
            path: /
            pathType: Prefix
{{ end }}
---
{{ if .Values.ingress }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: peers
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.acme.environment }}"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  tls:
  - hosts:
    - {{ .Values.peersHost }}
    secretName: "{{ .Values.peersHost }}-secret-tls"
  rules:
    - host: {{ .Values.peersHost }}
      http:
        paths:
          - backend:
              service:
                name: boot
                port:
                  number: 1340
            path: /
            pathType: Prefix
{{ end }}
