apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-opentelemetry
spec:
  mode: daemonset
  config: |
    exporters:
      logging: {}
      otlp/elastic/cloud:
        endpoint: "https://20e9ece2740647e280f8a119aead40d3.apm.us-east-1.aws.cloud.es.io:443"
        compression: gzip
        headers:
          # Elastic APM Server secret token
          Authorization: "Bearer {{ .Values.elastic.apiKey }}"
        tls:

    extensions:
      # The health_check extension is mandatory for this chart.
      # Without the health_check extension the collector will fail the readiness and liveliness probes.
      # The health_check extension can be modified, but should never be removed.
      health_check: {}
      memory_ballast: {}
    processors:
      batch:
        timeout: 10s
        send_batch_size: 1000
        send_batch_max_size: 1500
      # If set to null, will be overridden with values based on k8s resource limits
      memory_limiter:
        check_interval: 1s
        limit_mib: 4000
        limit_percentage: 50
        spike_limit_percentage: 30

    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
            cors:
              allowed_origins: ["*"]
    service:
      telemetry:
        metrics:
          address: 0.0.0.0:8888
        logs:
          level: "debug"
      extensions:
        - health_check
        - memory_ballast
      pipelines:
        logs:
          exporters:
            - logging
            - otlp/elastic/cloud
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
        traces:
          exporters:
            - logging
            - otlp/elastic/cloud
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
