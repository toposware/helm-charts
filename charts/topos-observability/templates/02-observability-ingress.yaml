apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elk
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.environment }}"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
    - hosts:
        - {{ .Values.kibanaHost }}
        - {{ .Values.elasticsearchHost }}
      secretName: "{{ .Values.kibanaHost }}-secret-tls"
  rules:
    - host: {{ .Values.kibanaHost }}
      http:
        paths:
          - backend:
              service:
                name: quickstart-kb-http
                port:
                  number: 5601
            path: /
            pathType: Prefix
    - host: {{ .Values.elasticsearchHost }}
      http:
        paths:
          - backend:
              service:
                name: quickstart-es-http
                port:
                  number: 9200
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-grpc
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.environment }}"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  tls:
    - hosts:
        - "grpc.{{ .Values.otelHost }}"
      secretName: "grpc.{{ .Values.otelHost }}-secret-tls"
  rules:
    - host: "grpc.{{ .Values.otelHost }}"
      http:
        paths:
          - backend:
              service:
                name: otel-collector-opentelemetry-collector
                port:
                  number: 4317
            path: /
            pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel-http
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.environment }}"
spec:
  tls:
    - hosts:
        - {{ .Values.otelHost }}
      secretName: "{{ .Values.otelHost }}-secret-tls"
  rules:
    - host: {{ .Values.otelHost }}
      http:
        paths:
          - backend:
              service:
                name: otel-collector-opentelemetry-collector
                port:
                  number: 4318
            path: /
            pathType: Prefix
---
apiVersion: v1
data:
  auth: {{ (htpasswd admin randAlphaNum 16) | b64enc | quote }}
kind: Secret
metadata:
  name: prometheus-basic-auth
  namespace: default
type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-{{ .Values.environment }}"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
    - hosts:
        - {{ .Values.prometheusHost }}
      secretName: "{{ .Values.prometheusHost }}-secret-tls"
  rules:
    - host: {{ .Values.prometheusHost }}
      http:
        paths:
          - backend:
              service:
                name: prometheus-kube-prometheus-prometheus
                port:
                  number: 9090
            path: /
            pathType: Prefix
